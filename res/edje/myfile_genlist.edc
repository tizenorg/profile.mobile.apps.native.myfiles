/*
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*/

// List bg color

// Genlist Text

#define GENLIST_HEIGHT                    135
#define GENLIST_HEIGHT_1LINE              102
#define GENLIST_PART_LIST_LINE_HEIGHT     1

#define GENLIST_PADDING_SIZE_DEFAULT            16
#define GENLIST_PADDING_SIZE_LEFT               20
#define GENLIST_PADDING_SIZE_RIGHT              26
// Dialogue group image has bottom padding (2piexl), Giant font can overlapped bottom line of image.
#define GENLIST_PADDING_SIZE_TOP                2
#define GENLIST_PADDING_SIZE_BOTTOM             2
// -----------------------------------------------------

//      |   top  |
// ---------------------
// left |  HERE  | right
// ---------------------
//      | bottom |
// ------------------
// | --> HERE
// ------------------
#define DSC_FROM_L( STATE, PARAM ) \
		description { state: STATE;\
		fixed: 1 0; \
		align: 0.0 0.5; \
		rel2.relative: 0.0 1.0; \
		PARAM\
}

// ------------------
//         HERE <-- |
// ------------------
#define DSC_FROM_R( STATE, PARAM ) \
		description { state: STATE;\
		fixed: 1 0; \
		align: 1.0 0.5; \
		rel1.relative: 1 0; \
		PARAM\
}


// ---------------------
// LEFT |  HERE  | RIGHT
// ---------------------
//      | BOTTOM |

#define DSC_LR( STATE, LEFT, RIGHT, PARAM ) \
		description { state: STATE;\
		rel1 { \
			relative: 1 0; \
			to_x: LEFT; \
		}\
		rel2 {\
			relative: 0 1;\
			to_x: RIGHT;\
		}\
		PARAM\
}


#define GENLIST_DESCRIPTION( left, right, top, bottom, param ) \
		description { state: "default" 0.0;\
		rel1 { \
			relative: 1 1; \
			to_x: left; \
			to_y: top; \
		}\
		rel2 {\
			relative: 0 0;\
			to_x: right;\
			to_y: bottom;\
		}\
		param\
}

// ---------------------
// left |--> HERE
// ---------------------
#define GENLIST_DESCRIPTION_L( left, param ) \
		description { state: "default" 0.0;\
		align: 0 0.5; \
		fixed: 1 0; \
		rel1 { \
			relative: 1 0; \
			to_x: left; \
			to_y: "base"; \
		}\
		rel2 { \
			relative: 1 1;\
			to_x: left; \
			to_y: "base"; \
		}\
		param\
}


#define GENLIST_DESCRIPTION_RTB( right, top, bottom, param ) \
		description { state: "default" 0.0;\
		align: 1 0.5;\
		rel1 { \
			relative: 0 1; \
			to_x: right; \
			to_y: top; \
		}\
		rel2 {\
			relative: 0 0;\
			to_x: right;\
			to_y: bottom;\
		}\
		param\
}


#define GENLIST_PROLOG \
		data.item: "selectraise" "on"; \
		data.item: "treesize" 0; \
		data.item: "focus_highlight" "on";


#define GENLIST_PROLOG_NORMAL \
		GENLIST_PROLOG \
		data.item: "treesize" GENLIST_TREESIZE_DEFAULT; \
		data.item: "flips" "elm.flip.content elm.flip.icon"; \
		images { \
			image : "00_list_group_bg.#.png" COMP; \
			image : "00_list_group_bg_ef.#.png" COMP; \
			image : "00_focus_01.#.png" COMP; \
		}


#define GENLIST_NAME(NAME) \
		name: "elm/genlist/item/"NAME; \
		alias: "elm/genlist/item_compress/"NAME; \
		alias: "elm/genlist/tree/"NAME; \
		alias: "elm/genlist/tree_compress/"NAME;

//****************************************************************************//
// ****************************** BG Image **********************************//
//****************************************************************************//
#define GENLIST_PART_BG_NORMAL \
		GENLIST_PART_RECT("bg_clip", \
				mouse_events: 0; \
				description { state: "default" 0.0; \
				visible: 1; \
				color: 255 255 255 255; \
				} \
				description { state: "decorate" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
				} \
				description { state: "reorder" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
				} \
				description { state: "decorate_reorder" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
				} \
		) \
		GENLIST_PART_RECT("bg_reorder_clip", \
				mouse_events: 0; \
				description { state: "default" 0.0; \
				visible: 0; \
				} \
				description { state: "reorder" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
				color: 255 255 255 255; \
				} \
				description { state: "decorate_reorder" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
				} \
				description { state: "decorate" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
				} \
				description { state: "reorder_flip" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
				} \
		) \
		GENLIST_PART_RECT("bg",  \
				clip_to: "bg_clip"; \
				description { state: "default" 0.0; \
				color_class: "B011"; \
				} \
				description { state: "pressed" 0.0; \
				inherit: "default" 0.0; \
				color_class: "B041P"; \
				} \
				description { state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				} \
		) \
		GENLIST_PART_SPACER("bg_reorder_left", \
				description { state: "default" 0.0; \
				min: 16 0; \
				max: 16 -1; \
				fixed: 1 0; \
				align: 0 0.5; \
				rel2.relative: 0 1; \
} \
		) \
		GENLIST_PART_SPACER("bg_reorder_right", \
				description { state: "default" 0.0; \
				min: 16 0; \
				max: 16 -1; \
				fixed: 1 0; \
				align: 1.0 0.5; \
				rel1.relative: 1 0; \
} \
		) \
		GENLIST_PART_SPACER("bg_reorder_top", \
				description { state: "default" 0.0; \
				min: 0 2; \
				max: -1 2; \
				fixed: 0 1; \
				align: 0.5 0; \
				rel2.relative: 1 0; \
} \
		) \
		GENLIST_PART_SPACER("bg_reorder_bottom", \
				description { state: "default" 0.0; \
				min: 0 2; \
				max: -1 2; \
				fixed: 0 1; \
				align: 0.5 1.0; \
				rel1.relative: 0 1; \
} \
		) \
		GENLIST_PART_IMAGE("bg_reorder", \
				clip_to: "bg_reorder_clip"; \
				description { state: "default" 0.0; \
				rel1 { \
					relative: 1 1; \
					to_x: "bg_reorder_left"; \
					to_y: "bg_reorder_top"; \
				} \
				rel2 { \
					relative: 0 0; \
					to_x: "bg_reorder_right"; \
					to_y: "bg_reorder_bottom"; \
				} \
				image { \
					normal: "00_list_group_bg.#.png"; \
				} \
				color_class: "B0217"; \
				} \
				description { state: "pressed" 0.0; \
				inherit: "default"; \
				color_class: "B041P"; \
				} \
				description { state: "flipped" 0.0; \
				inherit: "default"; \
				visible: 0; \
				} \
		) \
		GENLIST_PART_IMAGE("bg_reorder_ef", \
				clip_to: "bg_reorder_clip"; \
				description { state: "default" 0.0; \
				rel1 { \
					relative: 1 1; \
					to_x: "bg_reorder_left"; \
					to_y: "bg_reorder_top"; \
				} \
				rel2 { \
					relative: 0 0; \
					to_x: "bg_reorder_right"; \
					to_y: "bg_reorder_bottom"; \
				} \
				image { \
					normal: "00_list_group_bg_ef.#.png"; \
				} \
				color_class: "B0217"; \
				} \
				description { state: "pressed" 0.0; \
				inherit: "default"; \
				} \
				description { state: "flipped" 0.0; \
				inherit: "default"; \
				visible: 0; \
				} \
		) \
		GENLIST_PART_RECT("sound",  \
				repeat_events: 1;  /*for play_sound to check pressed state*/ \
		description { state: "default" 0.0; \
		color: 0 0 0 0; \
				} \
		)


//****************************************************************************//
//********************************* PADDING **********************************//
//****************************************************************************//
#define GENLIST_PART_EXPANDED_PAD \
		part { name: "elm.swallow.pad"; \
		type: SWALLOW; \
		scale: 1; \
		mouse_events: 0; \
		description { state: "default" 0.0; \
		visible: 0; \
		min: 0 0; \
		fixed: 1 0; \
		align: 0.0 0.5; \
		rel1.to: "base"; \
		rel2.to: "base"; \
		rel2.relative: 0.0 1.0; \
		} \
} \

#define GENLIST_DESCRIPTION_DECORATE_PADDING \
		description { state: "decorate" 0.0; \
		inherit: "default" 0.0; \
		min: 0 0; \
		max: 0 0; \
}

#define GENLIST_DESCRIPTION_REORDER_PADDING \
		description { state: "reorder" 0.0; \
		inherit: "default" 0.0; \
		min: 32 0; \
		max: 32 -1; \
}



#define GENLIST_PART_PADDING_LEFT_SIZE( SIZE ) \
		GENLIST_PART_EXPANDED_PAD \
		GENLIST_PART_SPACER("elm.padding.left", \
				GENLIST_DESCRIPTION_L("elm.swallow.pad",  \
						min: SIZE 0; \
						max: SIZE -1; \
						fixed: 1 0; \
				) \
				GENLIST_DESCRIPTION_DECORATE_PADDING \
				GENLIST_DESCRIPTION_REORDER_PADDING \
				GENLIST_DESCRIPTION_DECORATE_REORDER_PADDING \
		)


#define GENLIST_PART_PADDING_RIGHT_SIZE( SIZE ) \
		GENLIST_PART_SPACER("elm.padding.right", \
				description { state: "default" 0.0; \
				min: SIZE 0; \
				max: SIZE -1; \
				fixed: 1 0; \
				align: 1.0 0.5; \
				rel1.to: "base"; \
				rel2.to: "base"; \
				rel1.relative: 1 0; \
} \
GENLIST_DESCRIPTION_DECORATE_PADDING \
GENLIST_DESCRIPTION_REORDER_PADDING \
GENLIST_DESCRIPTION_DECORATE_REORDER_PADDING \
		)



#define GENLIST_PART_PADDING_TOP_SIZE( SIZE ) \
		GENLIST_PART_SPACER("elm.padding.top", \
				description { \
	state: "default" 0.0; \
	min: 0 SIZE; \
	max: -1 SIZE; \
	fixed: 0 1; \
	rel1.to: "base"; \
	rel2.to: "base"; \
	rel2.relative: 1.0 0.0; \
	align: 0.5 0.0; \
} \
description { state: "reorder" 0.0; \
inherit: "default" 0.0; \
min: 0 (SIZE+2); \
max: -1 (SIZE+2); \
} \
		)

#define GENLIST_PART_PADDING_BOTTOM_SIZE( SIZE ) \
		GENLIST_PART_SPACER("elm.padding.bottom", \
				description { state: "default" 0.0; \
				min: 0 SIZE; \
				max: -1 SIZE; \
				fixed: 0 1; \
				rel1.to: "base"; \
				rel2.to: "base"; \
				rel1.relative: 0.0 1.0; \
				align: 0.5 1.0; \
} \
description { state: "reorder" 0.0; \
inherit: "default" 0.0; \
min: 0 (SIZE+2); \
max: -1 (SIZE+2); \
} \
		)

#define GENLIST_PART_PADDING_R( NAME, RIGHT ) \
		GENLIST_PART_SPACER(NAME, \
				description { state: "default" 0.0; \
				fixed: 1 0; \
				min: GENLIST_PADDING_SIZE_DEFAULT 0; \
				max: GENLIST_PADDING_SIZE_DEFAULT -1; \
				align: 1 0.5; \
				rel1 { \
					relative: 0 0; \
					to_x: RIGHT; \
				} \
				rel2 { \
					relative: 0 1; \
					to_x: RIGHT; \
				} \
} \
		)


// 2.2.7 Genlist_Edit mode (Rename)
// FIXME: padding is not needed when swallow content is NULL.
// But how can edje know existence of swallow content?
#define GENLIST_PART_FLIP \
		GENLIST_PART_RECT("elm.flip.bg", \
				mouse_events: 0; \
				description { state: "default" 0.0;\
				rel2.offset: 0 -3; \
				color_class: "B011"; \
				visible: 0; \
				} \
				description { state: "flipped" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
				}\
		) \
		GENLIST_PART_SPACER("elm.flip.padding.right", \
				description { state: "default" 0.0; \
				min: 26 0; \
				max: 26 -1; \
				fixed: 1 0; \
				align: 1 0.5; \
				rel1.relative: 1 0; \
} \
		) \
		GENLIST_PART_ICON("elm.flip.content", \
				GENLIST_DESCRIPTION("elm.padding.left", "elm.flip.padding.icon.left",  \
						"elm.padding.top", "elm.padding.bottom", \
						visible: 1; /* FIXME: object(entry) should be visible when focused. if not, it will be unfocused immediately */ \
		min: 0 96; \
				) \
				description { state: "flipped" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
} \
		) \
		GENLIST_PART_PADDING_R("elm.flip.padding.icon.left", "elm.flip.icon") \
		GENLIST_PART_ICON( "elm.flip.icon", \
				GENLIST_DESCRIPTION_RTB("elm.flip.padding.right", \
						"elm.padding.top", "elm.padding.bottom", \
						visible: 0; \
						aspect: 1 1; \
						align: 1 0.5; \
						max: 158 74; \
				) \
				description { state: "flipped" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
} \
		)

//****************************************************************************//
// *******************************  Programs ********************************//
//**************************************************************************//

#define GENLIST_PROGRAM_DISABLED( TARGET ) \
		program { name: "enabled"; \
		signal: "elm,state,enabled"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		TARGET \
} \
program { name: "disabled"; \
signal: "elm,state,disabled"; \
source: "elm"; \
action: STATE_SET "disabled" 0.0; \
TARGET \
}

#define GENLIST_PROGRAM_SELECT( TARGET ) \
		program { name: "pressed"; \
		signal: "elm,state,selected"; \
		source: "elm"; \
		action: STATE_SET "pressed" 0.0; \
		TARGET \
} \
program { name: "unselected"; \
signal: "elm,state,unselected"; \
source: "elm"; \
action: STATE_SET "default" 0.0; \
TARGET \
}


//****************************************************************************//
// *******************************  Icon Part ******************************//
//***************************************************************************//
#define GENLIST_PART_ICON(NAME, DESCRIPION) \
		part { name: NAME; \
		scale: 1; \
		type: SWALLOW; \
		DESCRIPION \
}



/*****************************************************************************/
/******************************* Genlist IMAGE ********************************/
/*****************************************************************************/
#define GENLIST_PART_IMAGE(NAME, DESCRIPION) \
		part { name: NAME; \
		scale: 1; \
		type: IMAGE; \
		DESCRIPION \
}


/*****************************************************************************/
/******************************* Genlist RECT ********************************/
/*****************************************************************************/
#define GENLIST_PART_SPACER(NAME, DESCRIPION) \
		part { name: NAME; \
		scale: 1; \
		mouse_events: 0; \
		type: SPACER; \
		DESCRIPION \
}

#define GENLIST_PART_RECT(NAME, DESCRIPION) \
		part { name: NAME; \
		scale: 1; \
		type: RECT; \
		DESCRIPION \
}


#define GENLIST_PROGRAM_FOCUS_NORMAL \
		program { name: "focused"; \
		signal: "elm,action,focus_highlight,show"; \
		source: "elm"; \
		script { \
			new st[31]; \
			new Float:vl; \
			get_state(PART:"bg_reorder_clip", st, 30, vl); \
			if (!strcmp(st, "reorder") || !strcmp(st, "decorate_reorder")) \
			set_state(PART:"focus_part_reorder", "focused", 0.0); \
			else \
			set_state(PART:"focus_part", "focused", 0.0); \
		} \
} \
program { name: "unfocused"; \
signal: "elm,action,focus_highlight,hide"; \
source: "elm"; \
action: STATE_SET "default" 0.0; \
target: "focus_part_reorder"; \
target: "focus_part"; \
}

#define GENLIST_PART_BOTTOM_LINE \
		GENLIST_PART_RECT("bottom_line_clip", \
				description { state: "default" 0.0; \
				color: 255 255 255 255; \
} \
description { state: "decorate" 0.0; \
inherit: "default" 0.0; \
color: 0 0 0 0; \
} \
description { state: "reorder" 0.0; \
inherit: "default" 0.0; \
color: 0 0 0 0; \
} \
description { state: "decorate_reorder" 0.0; \
inherit: "default" 0.0; \
color: 0 0 0 0; \
} \
		) \
		GENLIST_PART_RECT("bottom_line", \
				mouse_events: 0; \
				clip_to: "bottom_line_clip"; \
				description { state: "default" 0.0; \
				min: 0 GENLIST_PART_LIST_LINE_HEIGHT; \
				max: -1 GENLIST_PART_LIST_LINE_HEIGHT; \
				fixed: 0 1; \
				align: 0.5 1; \
				color_class: "B0223"; \
				rel1.to_x: "base"; \
				rel1.relative: 0 0; \
				rel2.to_x: "base"; \
				rel2.relative: 1 1; \
				rel1.offset: -1 -1; \
				} \
				description { state: "flipped" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
				} \
				description { state: "hidden" 0.0; \
				inherit: "default" 0.0; \
				visible: 0; \
				} \
		)

#define GENLIST_PART_BOTTOM_LINE_OFF \
		GENLIST_PART_RECT("bottom_line", \
				mouse_events: 0; \
				description { state: "default" 0.0; \
				color: 0 0 0 0; \
				} \
		)

#define GENLIST_DESCRIPTION_DECORATE_REORDER_PADDING \
		description { state: "decorate_reorder" 0.0; \
		inherit: "default" 0.0; \
		min: 0 0; \
		max: 0 0; \
}

#define GENLIST_PART_PADDING_LEFT \
		GENLIST_PART_EXPANDED_PAD \
		GENLIST_PART_SPACER("elm.padding.left", \
				GENLIST_DESCRIPTION_L("elm.swallow.pad",  \
						min: GENLIST_PADDING_SIZE_LEFT 0; \
						max: GENLIST_PADDING_SIZE_LEFT -1; \
						fixed: 1 0; \
				) \
				GENLIST_DESCRIPTION_DECORATE_PADDING \
				GENLIST_DESCRIPTION_REORDER_PADDING \
				GENLIST_DESCRIPTION_DECORATE_REORDER_PADDING \
		)

#define GENLIST_PART_PADDING_RIGHT \
		GENLIST_PART_SPACER("elm.padding.right", \
				description { state: "default" 0.0; \
				min: GENLIST_PADDING_SIZE_RIGHT 0; \
				max: GENLIST_PADDING_SIZE_RIGHT -1; \
				fixed: 1 0; \
				align: 1.0 0.5; \
				rel1.to: "base"; \
				rel2.to: "base"; \
				rel1.relative: 1 0; \
} \
GENLIST_DESCRIPTION_DECORATE_PADDING \
GENLIST_DESCRIPTION_REORDER_PADDING \
GENLIST_DESCRIPTION_DECORATE_REORDER_PADDING \
		)

#define GENLIST_PART_PADDING_TOP \
		GENLIST_PART_SPACER("elm.padding.top", \
				description { \
	state: "default" 0.0; \
	min: 0 GENLIST_PADDING_SIZE_TOP; \
	max: -1 GENLIST_PADDING_SIZE_TOP; \
	fixed: 0 1; \
	rel1.to: "base"; \
	rel2.to: "base"; \
	rel2.relative: 1.0 0.0; \
	align: 0.5 0.0; \
} \
description { state: "reorder" 0.0; \
inherit: "default" 0.0; \
min: 0 (GENLIST_PADDING_SIZE_TOP+2); \
max: -1 (GENLIST_PADDING_SIZE_TOP+2); \
} \
		)

#define GENLIST_PART_PADDING_BOTTOM \
		GENLIST_PART_SPACER("elm.padding.bottom", \
				description { state: "default" 0.0; \
				min: 0 GENLIST_PADDING_SIZE_BOTTOM; \
				max: -1 GENLIST_PADDING_SIZE_BOTTOM; \
				fixed: 0 1; \
				rel1.to: "base"; \
				rel2.to: "base"; \
				rel1.relative: 0.0 1.0; \
				align: 0.5 1.0; \
} \
description { state: "reorder" 0.0; \
inherit: "default" 0.0; \
min: 0 (GENLIST_PADDING_SIZE_BOTTOM+2); \
max: -1 (GENLIST_PADDING_SIZE_BOTTOM+2); \
} \
		)

#define GENLIST_PART_FOCUS \
		GENLIST_PART_IMAGE("focus_part", \
				mouse_events: 0; \
				description { state: "default" 0.0; \
				visible: 0; \
				image { \
					normal: "00_focus_01.#.png"; \
				} \
				color_class: "W161"; \
				} \
				description { state: "focused" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
				} \
		) \

#define GENLIST_PART_FOCUS_REORDER \
		GENLIST_PART_IMAGE("focus_part_reorder", \
				mouse_events: 0; \
				description { state: "default" 0.0; \
				rel1 { \
					relative: 1 1; \
					to_x: "bg_reorder_left"; \
					to_y: "bg_reorder_top"; \
				} \
				rel2 { \
					relative: 0 0; \
					to_x: "bg_reorder_right"; \
					to_y: "bg_reorder_bottom"; \
				} \
				visible: 0; \
				image { \
					normal: "00_focus_01.#.png"; \
				} \
				color_class: "W161"; \
				} \
				description { state: "focused" 0.0; \
				inherit: "default" 0.0; \
				visible: 1; \
				} \
		)


#define GENLIST_PART_FOCUS_NORMAL \
		GENLIST_PART_FOCUS \
		GENLIST_PART_FOCUS_REORDER

#define GENLIST_PROGRAM_DEFAULT( TARGET ) \
		program { name: "default"; \
		signal: "elm,state,default"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		TARGET \
} \

#define GENLIST_PROGRAM_FLIP \
		program { name: "flip_enabled"; \
		signal:  "elm,state,flip,enabled"; \
		source:  "elm"; \
		transition: DECELERATE 0.5; \
		action:  STATE_SET "flipped" 0.0; \
		target: "elm.flip.content"; \
		target: "elm.flip.icon"; \
} \
program { name: "flip_disabled"; \
signal:  "elm,state,flip,disabled"; \
source:  "elm"; \
transition: DECELERATE 0.5; \
action:  STATE_SET "default" 0.0; \
target: "elm.flip.content"; \
target: "elm.flip.icon"; \
} \
program { name: "flip_enabled_bg"; \
signal:  "elm,state,flip,enabled"; \
source:  "elm"; \
action:  STATE_SET "flipped" 0.0; \
target: "elm.flip.bg"; \
} \
program { name: "flip_disabled_bg"; \
signal:  "elm,state,flip,disabled"; \
source:  "elm"; \
action:  STATE_SET "default" 0.0; \
target: "elm.flip.bg"; \
}

#define GENLIST_PART_BASE_SIZE(HEIGHT) \
		part { name: "base"; \
		type: RECT; \
		mouse_events: 0; \
		scale: 1; \
		description { state: "default" 0.0; \
		color: 0 0 0 0; \
		min: 0 HEIGHT; \
		} \
} \
part { name: "state"; \
type: RECT; \
mouse_events: 0; \
scale: 1; \
description { state: "default" 0.0; \
color: 0 0 0 0; \
} \
description { state: "decorate" 0.0; \
inherit: "default"; \
} \
description { state: "reorder" 0.0; \
inherit: "default"; \
} \
description { state: "decorate_reorder" 0.0; \
inherit: "default"; \
} \
}


#define GENLIST_PART_BASE \
		GENLIST_PART_BASE_SIZE(0)

#define GENLIST_PROGRAM_BOTTOMLINE \
		program { name : "hide_bottomline"; \
		signal: "elm,state,bottomline,hide"; \
		source: ""; \
		action: STATE_SET "hidden" 0.0; \
		target: "bottom_line"; \
} \
program { name : "show_bottomline"; \
signal: "elm,state,bottomline,show"; \
source: ""; \
action: STATE_SET "default" 0.0; \
target: "bottom_line"; \
}


/********* dialogue ************/
#define PART(TYPE, NAME, DESCRIPION) \
		part { name: NAME; \
		scale: 1; \
		type: TYPE; \
		DESCRIPION \
}


/*************************** Parts **********************************/
#define MH_GENLIST_CATEGORY_LANDSCAPE_H      137*3
#define MH_GENLIST_CATEGORY_PORTRAINT_H      137*3
collections{
	base_scale: 1.8;

	plugins {
		plugin {
			name: "touch_sound";  // Name run by RUN_PLUGIN
			source: "feedback";	 // External edje plugin name
			param: "FEEDBACK_TYPE_SOUND FEEDBACK_PATTERN_TAP";
		}
	}

	group {  GENLIST_NAME("1icon/default")
		GENLIST_PROLOG_NORMAL

		data.item: "contents" "elm.icon";

	parts {
		GENLIST_PART_BASE
		GENLIST_PART_BG_NORMAL
		GENLIST_PART_BOTTOM_LINE
		GENLIST_PART_PADDING_LEFT
		GENLIST_PART_PADDING_RIGHT
		GENLIST_PART_PADDING_TOP
		GENLIST_PART_PADDING_BOTTOM

		GENLIST_PART_ICON("elm.icon",
				GENLIST_DESCRIPTION(
						"elm.padding.left", "elm.padding.right",
						"elm.padding.top", "elm.padding.bottom",
						min: 0 GENLIST_HEIGHT_1LINE;
				)
		)
		GENLIST_PART_FLIP
		GENLIST_PART_FOCUS_NORMAL
	}
	GENLIST_PROGRAM_DEFAULT( target: "elm.icon"; )
	GENLIST_PROGRAM_DISABLED( target: "elm.icon"; )
	GENLIST_PROGRAM_SELECT( target: "elm.icon"; )
	GENLIST_PROGRAM_FLIP
	GENLIST_PROGRAM_FOCUS_NORMAL
	}
	group { GENLIST_NAME("myfile/1icon/no_padding_line_landscape/default")
		inherit: "elm/genlist/item/1icon/default";

	parts {
		GENLIST_PART_PADDING_LEFT_SIZE(0)
		GENLIST_PART_PADDING_RIGHT_SIZE(0)
		GENLIST_PART_PADDING_TOP_SIZE(0)
		GENLIST_PART_PADDING_BOTTOM_SIZE(0)
		GENLIST_PART_BOTTOM_LINE_OFF
		part { name: "elm.icon";
		scale: 1;
		description { state: "default" 0.0;
		min: 0 MH_GENLIST_CATEGORY_LANDSCAPE_H;
		}
		}
	}
	}


	group { GENLIST_NAME("myfile/1icon/no_padding_line_portraint/default")
		inherit: "elm/genlist/item/1icon/default";

	parts {
		GENLIST_PART_PADDING_LEFT_SIZE(0)
		GENLIST_PART_PADDING_RIGHT_SIZE(0)
		GENLIST_PART_PADDING_TOP_SIZE(0)
		GENLIST_PART_PADDING_BOTTOM_SIZE(0)
		GENLIST_PART_BOTTOM_LINE_OFF
		part { name: "elm.icon";
		scale: 1;
		description { state: "default" 0.0;
		min: 0 MH_GENLIST_CATEGORY_PORTRAINT_H;
		}
		}
	}
	}


#define GENLIST_TREESIZE_DEFAULT            22
#define LIST_PART_BG \
   PART(SWALLOW, "elm.swallow.bg", \
      description { state: "default" 0.0; \
      } \
   ) \
   PART(RECT, "bg", \
      description { state: "default" 0.0; \
          color:0 0 0 0; \
      } \
       description { state: "pressed" 0.0; \
         inherit: "default" 0.0; \
         color: 21 108 148 77; \
      } \
   ) \
   PART(RECT, "reorder", \
      description { state: "default" 0.0; \
         color:0 0 0 0; \
      } \
      description { state: "pressed" 0.0; \
         inherit: "default" 0.0; \
         color: 21 108 148 77; \
      } \
   )
#define LIST_2LINE_PADDING_TOP_SIZE         13   // FIXME: please check font height
#define LIST_2LINE_PADDING_BOTTOM_SIZE      13   // FIXME: please check font height
#define DSC_L( STATE, LEFT, PARAM ) \
		description { state: STATE; \
		align: 0 0.5; \
		fixed: 1 0; \
		rel1 { \
			relative: 1 0; \
			to_x: LEFT; \
		} \
		rel2 { \
			relative: 1 1; \
			to_x: LEFT; \
		} \
		PARAM \
}
#define LIST_PADDING_CENTER_LEFT_SIZE       15
#define LIST_PADDING_CENTER_RIGHT_SIZE      15
#define DSC_R( STATE, RIGHT, PARAM ) \
		description { state: STATE; \
		align: 1 0.5; \
		fixed: 1 0; \
		rel1 { \
			relative: 0 0; \
			to_x: RIGHT; \
		} \
		rel2 { \
			relative: 0 1; \
			to_x: RIGHT; \
		} \
		PARAM \
}
#define DSC_LTB( STATE, LEFT, TOP, BOTTOM, PARAM ) \
		description { state: STATE; \
		align: 0 0.5; \
		rel1 { \
			relative: 1 1; \
			to_x: LEFT; \
			to_y: TOP; \
		} \
		rel2 { \
			relative: 1 0; \
			to_x: LEFT; \
			to_y: BOTTOM; \
		} \
		PARAM \
}
#define LIST_TEXT_MAIN_HEIGHT               38
#define LIST_TEXT_SUB_HEIGHT                32
#define LIST_TEXT_SUB_WIDTH_MAX             220
#define DSC_LRB( STATE, LEFT, RIGHT, BOTTOM, PARAM ) \
		description { state: STATE; \
		align: 0.5 1; \
		rel1 { \
			relative: 1 0; \
			to_x: LEFT; \
			to_y: BOTTOM; \
		} \
		rel2 { \
			relative: 0 0; \
			to_x: RIGHT; \
			to_y: BOTTOM; \
		} \
		PARAM \
}
#define DSC_RB( STATE, RIGHT, BOTTOM, PARAM ) \
		description { state: STATE; \
		align: 1 1; \
		rel1 { \
			relative: 0 0; \
			to_x: RIGHT; \
			to_y: BOTTOM; \
		} \
		rel2 { \
			relative: 0 0; \
			to_x: RIGHT; \
			to_y: BOTTOM; \
		} \
		PARAM \
}
#define LIST_PROGRAM_DEFAULT( TARGET ) \
		program { name: "default"; \
		signal: "elm,state,default"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		TARGET \
} \

#define LIST_PROGRAM_DISABLED( TARGET ) \
		program { name: "enabled"; \
		signal: "elm,state,enabled"; \
		source: "elm"; \
		action: STATE_SET "default" 0.0; \
		TARGET \
} \
program { name: "disabled"; \
signal: "elm,state,disabled"; \
source: "elm"; \
action: STATE_SET "disabled" 0.0; \
TARGET \
}

#define LIST_PROGRAM_SELECT( TARGET ) \
		program { name: "pressed"; \
		signal: "elm,state,selected"; \
		source: "elm"; \
		action: STATE_SET "pressed" 0.0; \
		TARGET \
} \
program { name: "unselected"; \
signal: "elm,state,unselected"; \
source: "elm"; \
action: STATE_SET "default" 0.0; \
TARGET \
}

#define LIST_PROGRAM_REORDER( TARGET ) \
		program { name: "reorder_enabled"; \
		signal: "elm,state,reorder,enabled"; \
		source: "elm"; \
		action: STATE_SET "reorder" 0.0; \
		TARGET \
} \
program { name: "reorder_disabled"; \
signal: "elm,state,reorder,disabled"; \
source: "elm"; \
action: STATE_SET "default" 0.0; \
TARGET \
}

#define LIST_PROGRAM_SOUND \
		program { name: "play_sound"; \
		signal: "elm,state,clicked"; \
		source: "elm"; \
		script { \
			run_program(PROGRAM:"touch_sound"); \
		} \
} \
program { name: "touch_sound"; \
action: RUN_PLUGIN "touch_sound"; \
}

#define LIST_PROGRAMS( TARGET ) \
		programs { \
	LIST_PROGRAM_DEFAULT( TARGET \
			target: "bg"; \
	) \
	LIST_PROGRAM_DISABLED( TARGET \
			target: "bg"; \
	) \
	LIST_PROGRAM_SELECT( TARGET \
			target: "bg"; \
	) \
	LIST_PROGRAM_REORDER( TARGET \
			target: "bg"; \
	) \
	LIST_PROGRAM_SOUND \
}
#define DSC_FROM_T( STATE, PARAM ) \
		description { state: STATE;\
		fixed: 0 1; \
		align: 0.5 0.0; \
		rel2.relative: 1.0 0.0; \
		PARAM\
}
#define DSC_FROM_B( STATE, PARAM ) \
		description { state: STATE;\
		fixed: 0 1; \
		rel1.relative: 0.0 1.0; \
		align: 0.5 1.0; \
		PARAM\
}
#define DSC_RTB( STATE, RIGHT, TOP, BOTTOM, PARAM ) \
		description { state: STATE;\
		align: 1 0.5;\
		rel1 { \
			relative: 0 1; \
			to_x: RIGHT; \
			to_y: TOP; \
		}\
		rel2 {\
			relative: 0 0;\
			to_x: RIGHT;\
			to_y: BOTTOM;\
		}\
		PARAM\
}
#define DSC_LRTB( STATE, LEFT, RIGHT, TOP, BOTTOM, PARAM ) \
		description { state: STATE;\
		rel1 { \
			relative: 1 1; \
			to_x: LEFT; \
			to_y: TOP; \
		}\
		rel2 {\
			relative: 0 0;\
			to_x: RIGHT;\
			to_y: BOTTOM;\
		}\
		PARAM\
}
#define LIST_PADDING_TEXT_SIZE              22
#define LIST_TEXT_MAIN_SIZE                 30
#define LIST_TEXT_SUB_SIZE                  24
#define STYLE_TAGS \
		tag:  "br" "\n";\
		tag:  "ps" "ps";\
		tag:  "tab" "\t";\
		tag:  "b" "+ font_weight=Bold";
	styles {
		// ************* list main text ********** //
		style { name: "list_text_main";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_MAIN_SIZE" color=#000000  text_class=T023 ellipsis=1.0";
		STYLE_TAGS
		}
		style { name: "list_text_main_dim";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_MAIN_SIZE" color=#000000  text_class=T023D ellipsis=1.0";
		STYLE_TAGS
		}
		style { name: "list_text_main_press";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_MAIN_SIZE" color=#000000  text_class=T023P ellipsis=1.0";
		STYLE_TAGS
		}
		// ************* list sub text ********** //
		style { name: "list_text_sub_01";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color=#000000  text_class=T024 ellipsis=1.0";
		STYLE_TAGS
		}
		style { name: "list_text_sub_01_dim";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color=#000000  text_class=T024D ellipsis=1.0";
		STYLE_TAGS
		}
		style { name: "list_text_sub_01_press";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color=#000000  text_class=T024P ellipsis=1.0";
		STYLE_TAGS
		}
		style { name: "list_text_sub_02";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color=#000000  text_class=T024L1 ellipsis=1.0";
		STYLE_TAGS
		}
		style { name: "list_text_sub_02_dim";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color=#000000  text_class=T024L1D ellipsis=1.0";
		STYLE_TAGS
		}
		style { name: "list_text_sub_02_press";
		base: "font=Tizen:style=Regular font_size="LIST_TEXT_SUB_SIZE" color=#000000  text_class=T024L1P ellipsis=1.0";
		STYLE_TAGS
		}
	}

#define LITE_GENLIST_ICON_PAD_L	15
#define LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH	74
#define LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT	74
#define LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH	46
#define DSC_LB( STATE, LEFT, BOTTOM, PARAM ) \
		description { state: STATE; \
		align: 0 1; \
		rel1 { \
			relative: 1 0; \
			to_x: LEFT; \
			to_y: BOTTOM; \
		} \
		rel2 { \
			relative: 1 0; \
			to_x: LEFT; \
			to_y: BOTTOM; \
		} \
		PARAM \
}

	group { GENLIST_NAME("myfile_2line.top.3/default")

	data.item: "treesize" GENLIST_TREESIZE_DEFAULT;
	data.item: "texts" "elm.text.main.left.top elm.text.sub.right.top elm.text.main.right.top elm.text.sub.left.top elm.text.sub.left.bottom elm.text.sub.right.bottom";
	data.item: "contents" "elm.icon.1 video_play elm.icon.2 elm.icon.left elm.icon.right elm.icon.left.top elm.icon.right.top elm.icon.left.bottom elm.icon.right.bottom";
	data.item: "banded_bg_area" "elm.swallow.bg";
	data.item: "banded_bg_color" "255 255 255 255";
	parts {
		LIST_PART_BG
		PART(SWALLOW, "elm.swallow.pad",
				DSC_FROM_L("default" 0.0, );
		mouse_events: 0;
		)
		PART(SPACER, "elm.padding.top",
				DSC_FROM_T("default" 0.0,
						min: 0 LIST_2LINE_PADDING_TOP_SIZE;
		max: -1 LIST_2LINE_PADDING_TOP_SIZE;
				)
		)
		PART(SPACER, "elm.padding.bottom",
				DSC_FROM_B("default" 0.0,
						min: 0 LIST_2LINE_PADDING_BOTTOM_SIZE;
		max: -1 LIST_2LINE_PADDING_BOTTOM_SIZE;
				)
		)

		PART(SPACER, "elm.padding.left",
				DSC_FROM_L("default" 0.0,
						fixed: 1 0;
		min: LITE_GENLIST_ICON_PAD_L 0;
		max: LITE_GENLIST_ICON_PAD_L -1;
				)
		)
		PART(SPACER, "_bg",
				DSC_L("default" 0.0,
						"elm.padding.left",
						fixed: 1 1;
		min: (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT);
		max: (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT);
				)
		)
		PART(SWALLOW, "elm.icon.2",
				DSC_FROM_R("default" 0.0, )
		)
		PART(SPACER, "elm.padding.center.left",
				DSC_L("default" 0.0,
						"_bg",
						min: LIST_PADDING_CENTER_LEFT_SIZE 0;
		max: LIST_PADDING_CENTER_LEFT_SIZE -1;
				)
		)
		PART(SPACER, "elm.padding.center.right",
				DSC_R("default" 0.0,
						"elm.icon.2",
						min: LIST_PADDING_CENTER_RIGHT_SIZE 0;
		max: LIST_PADDING_CENTER_RIGHT_SIZE -1;
				)
		)
		PART(SWALLOW, "elm.icon.left",
				DSC_LTB("default" 0.0,
						"elm.padding.center.left", "elm.padding.top", "elm.padding.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.right",
				DSC_RTB("default" 0.0,
						"elm.padding.center.right", "elm.padding.top", "elm.padding.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.left.top",
				DSC_LTB("default" 0.0,
						"elm.icon.left", "elm.padding.top", "elm.text.sub.left.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.left.bottom",
				DSC_LTB("default" 0.0,
						"elm.icon.left", "elm.text.sub.left.bottom", "elm.padding.bottom",
						rel1.relative: 1 0; // to make same height with "elm.text.sub.left.bottom"
				)
		)
		PART(SWALLOW, "elm.icon.right.top",
				DSC_RTB("default" 0.0,
						"elm.icon.right", "elm.padding.top", "elm.text.sub.left.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.right.bottom",
				DSC_RTB("default" 0.0,
						"elm.icon.right", "elm.text.sub.left.bottom", "elm.padding.bottom",
						rel1.relative: 0 0; // to make same height with "elm.text.sub.left.bottom"
				)
		)
		PART(TEXTBLOCK, "elm.text.main.left.top",
				DSC_LRTB("default" 0.0,
						"elm.icon.left.top", "elm.text.sub.right.top", "elm.padding.top","elm.text.sub.left.bottom",
						min: 0 LIST_TEXT_MAIN_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_main";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_main_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_main_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.right.top",
				DSC_RTB("default" 0.0,
						"elm.icon.right.top", "elm.padding.top", "elm.text.sub.right.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel1.offset: -LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 1.0 0.5;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.main.right.top",
				DSC_LRTB("default" 0.0,
						"elm.text.sub.left.top", "elm.icon.right.top", "elm.padding.top","elm.text.sub.right.bottom",
						min: 0 LIST_TEXT_MAIN_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_main";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_main_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_main_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.left.top",
				DSC_LTB("default" 0.0,
						"elm.icon.left.top", "elm.padding.top", "elm.text.sub.left.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel2.offset: LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 0.0 0.5;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)

		PART(TEXTBLOCK, "elm.text.sub.left.bottom",
				DSC_LB("default" 0.0,
						"elm.icon.left.bottom", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_01";
		/* This limits text growing. */
		rel2.offset: 150 0;
		text.max: 1 0;
		align: 0.0 1.0;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_01_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_01_dim";
		}
		)
		/*
      PART(TEXTBLOCK, "elm.text.sub.left.bottom",
	 DSC_LRB("default" 0.0,
	    "elm.icon.left.bottom", "elm.padding.text.bottom", "elm.padding.bottom",
	    min: 0 LIST_TEXT_SUB_HEIGHT;
	    text.min: 0 1;
	    text.style: "list_text_sub_01";
	 )
	 description { state: "pressed" 0.0;
	    inherit: "default" 0.0;
	    text.style: "list_text_sub_01_press";
	 }
	 description { state: "disabled" 0.0;
	    inherit: "default" 0.0;
	    text.style: "list_text_sub_01_dim";
	 }
      )*/
		PART(SPACER, "elm.padding.text.bottom",
				DSC_LB("default" 0.0,
						"elm.text.sub.left.bottom", "elm.padding.bottom",
						min: 20 LIST_TEXT_SUB_HEIGHT;
		max: 20 LIST_TEXT_SUB_HEIGHT;
				)
		)
		/*
      PART(TEXTBLOCK, "elm.text.sub.right.bottom",
         DSC_RB("default" 0.0,
            "elm.icon.right.bottom", "elm.padding.bottom",
            min: 0 LIST_TEXT_SUB_HEIGHT;
            text.min: 0 1;
            text.style: "list_text_sub_02";
            rel1.offset: -LIST_TEXT_SUB_WIDTH_MAX 0;
            text.max: 1 0;
            align: 1.0 1.0;
         )
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "list_text_sub_02_press";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "list_text_sub_02_dim";
         }
      )     	*/

		PART(TEXTBLOCK, "elm.text.sub.right.bottom",
				DSC_LRB("default" 0.0,
						"elm.padding.text.bottom", "elm.padding.center.right", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.style: "list_text_sub_02";
		text.max: 1 0;
		align: 1.0 1.0;
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)
		PART(RECT, "file_icon_clipper",
				DSC_L("default" 0.0,
						"elm.padding.left",
						fixed: 1 1;
		min: (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT);
		max: (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT);
				)
		)
		part
		{
			name:"elm.swallow.content";
			type:SWALLOW;
			clip_to: "file_icon_clipper";
			scale: 1;
			description
			{
				state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to:"file_icon_clipper";}
				rel2 { relative: 1.0 1.0; to:"file_icon_clipper";}
			}
		}
		part { name: "elm.icon.1";
		scale: 1;
		type: SWALLOW;
		clip_to: "file_icon_clipper";
		description
		{
			state: "default" 0.0;
			align: 0.5 0.5;
			fixed: 1 1;
			min: LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT;
			max: LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT;
			rel1.to: "file_icon_clipper";
			rel2.to: "file_icon_clipper";
		}
		description { state: "fadeout" 0.0;
		inherit: "default" 0.0;
		color: 0 0 0 10;
		visible: 0;
		}
		description { state: "fadein" 0.0;
		inherit: "default" 0.0;
		}
		}
		part {
			name: "video_play";
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				visible: 1;
				min: 46 46;
				max: 46 46;
				align: 0.5 0.5;
				rel1 {relative: 0.0 0.0; to: "elm.icon.1";}
				rel2 {relative: 1.0 1.0; to: "elm.icon.1";}
			}
		}
	}
	LIST_PROGRAMS( target: "elm.text.main.left.top"; target: "elm.text.sub.right.top";
	target: "elm.text.main.right.top"; target: "elm.text.sub.left.top";
	target: "elm.text.sub.left.bottom"; target: "elm.text.sub.right.bottom"; )
	}

	group { GENLIST_NAME("myfile_search_2line.top.3/default")
	inherit: "elm/genlist/item/myfile_2line.top.3/default";
	parts {

		PART(TEXTBLOCK, "elm.text.sub.left.bottom",
				DSC_LB("default" 0.0,
						"elm.icon.left.bottom", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_01";
		/* This limits text growing. */
		rel2.offset: 300 0;
		text.max: 1 0;
		align: 0.0 1.0;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_01_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_01_dim";
		}
		)
	}
	}

	group { GENLIST_NAME("myfile_2line_root.top.3/default")

	data.item: "treesize" GENLIST_TREESIZE_DEFAULT;
	data.item: "texts" "elm.text.main.left.top elm.text.sub.right.top elm.text.main.right.top elm.text.sub.left.top elm.text.sub.left.bottom elm.text.sub.right.bottom";
	data.item: "contents" "elm.icon.folder elm.icon.2 elm.icon.left elm.icon.right elm.icon.left.top elm.icon.right.top elm.icon.left.bottom elm.icon.right.bottom";
	data.item: "banded_bg_area" "elm.swallow.bg";
	data.item: "banded_bg_color" "255 255 255 255";
	parts {
		LIST_PART_BG
		PART(SWALLOW, "elm.swallow.pad",
				DSC_FROM_L("default" 0.0, );
		mouse_events: 0;
		)
		PART(SPACER, "elm.padding.top",
				DSC_FROM_T("default" 0.0,
						min: 0 LIST_2LINE_PADDING_TOP_SIZE;
		max: -1 LIST_2LINE_PADDING_TOP_SIZE;
				)
		)
		PART(SPACER, "elm.padding.bottom",
				DSC_FROM_B("default" 0.0,
						min: 0 LIST_2LINE_PADDING_BOTTOM_SIZE;
		max: -1 LIST_2LINE_PADDING_BOTTOM_SIZE;
				)
		)

		PART(SPACER, "elm.padding.left",
				DSC_FROM_L("default" 0.0,
						fixed: 1 0;
		min: LITE_GENLIST_ICON_PAD_L 0;
		max: LITE_GENLIST_ICON_PAD_L -1;
				)
		)
		PART(SPACER, "_bg",
				DSC_L("default" 0.0,
						"elm.padding.left",
						fixed: 1 1;
		min: (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH);
		max: (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH);
				)
		)
		PART(SWALLOW, "elm.icon.2",
				DSC_FROM_R("default" 0.0, )
		)
		PART(SPACER, "elm.padding.center.left",
				DSC_L("default" 0.0,
						"_bg",
						min: LIST_PADDING_CENTER_LEFT_SIZE 0;
		max: LIST_PADDING_CENTER_LEFT_SIZE -1;
				)
		)
		PART(SPACER, "elm.padding.center.right",
				DSC_R("default" 0.0,
						"elm.icon.2",
						min: LIST_PADDING_CENTER_RIGHT_SIZE 0;
		max: LIST_PADDING_CENTER_RIGHT_SIZE -1;
				)
		)
		PART(SWALLOW, "elm.icon.left",
				DSC_LTB("default" 0.0,
						"elm.padding.center.left", "elm.padding.top", "elm.padding.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.right",
				DSC_RTB("default" 0.0,
						"elm.padding.center.right", "elm.padding.top", "elm.padding.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.left.top",
				DSC_LTB("default" 0.0,
						"elm.icon.left", "elm.padding.top", "elm.text.sub.left.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.left.bottom",
				DSC_LTB("default" 0.0,
						"elm.icon.left", "elm.text.sub.left.bottom", "elm.padding.bottom",
						rel1.relative: 1 0; // to make same height with "elm.text.sub.left.bottom"
				)
		)
		PART(SWALLOW, "elm.icon.right.top",
				DSC_RTB("default" 0.0,
						"elm.icon.right", "elm.padding.top", "elm.text.sub.left.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.right.bottom",
				DSC_RTB("default" 0.0,
						"elm.icon.right", "elm.text.sub.left.bottom", "elm.padding.bottom",
						rel1.relative: 0 0; // to make same height with "elm.text.sub.left.bottom"
				)
		)
		PART(TEXTBLOCK, "elm.text.main.left.top",
				DSC_LRTB("default" 0.0,
						"elm.icon.left.top", "elm.text.sub.right.top", "elm.padding.top","elm.text.sub.left.bottom",
						min: 0 LIST_TEXT_MAIN_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_main";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_main_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_main_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.right.top",
				DSC_RTB("default" 0.0,
						"elm.icon.right.top", "elm.padding.top", "elm.text.sub.right.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel1.offset: -LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 1.0 0.5;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.main.right.top",
				DSC_LRTB("default" 0.0,
						"elm.text.sub.left.top", "elm.icon.right.top", "elm.padding.top","elm.text.sub.right.bottom",
						min: 0 LIST_TEXT_MAIN_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_main";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_main_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_main_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.left.top",
				DSC_LTB("default" 0.0,
						"elm.icon.left.top", "elm.padding.top", "elm.text.sub.left.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel2.offset: LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 0.0 0.5;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.left.bottom",
				DSC_LRB("default" 0.0,
						"elm.icon.left.bottom", "elm.padding.text.bottom", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_01";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_01_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_01_dim";
		}
		)
		PART(SPACER, "elm.padding.text.bottom",
				DSC_RB("default" 0.0,
						"elm.text.sub.right.bottom", "elm.padding.bottom",
						min: LIST_PADDING_TEXT_SIZE LIST_TEXT_SUB_HEIGHT;
		max: LIST_PADDING_TEXT_SIZE LIST_TEXT_SUB_HEIGHT;
				)
		)
		PART(TEXTBLOCK, "elm.text.sub.right.bottom",
				DSC_RB("default" 0.0,
						"elm.icon.right.bottom", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel1.offset: -LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 1.0 1.0;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)
		PART(RECT, "file_icon_clipper",
				DSC_L("default" 0.0,
						"elm.padding.left",
						fixed: 1 1;
		min: (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH);
		max: (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH);
				)
		)
		part { name: "elm.icon.folder";
		scale: 1;
		type: SWALLOW;
		clip_to: "file_icon_clipper";
		description
		{
			state: "default" 0.0;
			align: 0.5 0.5;
			fixed: 1 1;
			min: LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH;
			max: LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH;
			rel1.to: "file_icon_clipper";
			rel2.to: "file_icon_clipper";
		}
		description { state: "fadeout" 0.0;
		inherit: "default" 0.0;
		color: 0 0 0 10;
		visible: 0;
		}
		description { state: "fadein" 0.0;
		inherit: "default" 0.0;
		}
		}
	}
	LIST_PROGRAMS( target: "elm.text.main.left.top"; target: "elm.text.sub.right.top";
	target: "elm.text.main.right.top"; target: "elm.text.sub.left.top";
	target: "elm.text.sub.left.bottom"; target: "elm.text.sub.right.bottom"; )
	}

#define LIST_PADDING_TOP_SIZE               29   // FIXME: please check font height
#define LIST_PADDING_BOTTOM_SIZE            29   // FIXME: please check font height

	group { GENLIST_NAME("myfile_1line/default")
	images {
		image : "my_files_play_icon.png" COMP;
		image : "my_files_play_icon_ef.png" COMP;
		image : "my_files_play_icon_body.png" COMP;
		image : "my_files_play_icon_stroke.png" COMP;
	}

	data.item: "treesize" GENLIST_TREESIZE_DEFAULT;
	data.item: "texts" "elm.text.main.left elm.text.main.right elm.text.sub.left elm.text.sub.right";
	data.item: "contents" "elm.icon.1 video_play elm.icon.2 elm.icon.left elm.icon.right";
	data.item: "banded_bg_area" "elm.swallow.bg";
	data.item: "banded_bg_color" "255 255 255 255";

	parts {
		LIST_PART_BG
		PART(SWALLOW, "elm.swallow.pad",
				DSC_FROM_L("default" 0.0, );
		mouse_events: 0;
		)
		PART(SPACER, "elm.padding.top",
				DSC_FROM_T("default" 0.0,
						min: 0 LIST_PADDING_TOP_SIZE;
		max: -1 LIST_PADDING_TOP_SIZE;
				)
		)
		PART(SPACER, "elm.padding.bottom",
				DSC_FROM_B("default" 0.0,
						min: 0 LIST_PADDING_BOTTOM_SIZE;
		max: -1 LIST_PADDING_BOTTOM_SIZE;
				)
		)

		PART(SPACER, "elm.padding.left",
				DSC_FROM_L("default" 0.0,
						fixed: 1 0;
		min: LITE_GENLIST_ICON_PAD_L 0;
		max: LITE_GENLIST_ICON_PAD_L -1;
				)
		)
		PART(SPACER, "_bg",
				DSC_L("default" 0.0,
						"elm.padding.left",
						fixed: 1 1;
		min: (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT);
		max: (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT);
				)
		)
		PART(SWALLOW, "elm.icon.2",
				DSC_FROM_R("default" 0.0, )
		)
		PART(SPACER, "elm.padding.center.left",
				DSC_L("default" 0.0,
						"_bg",
						min: LIST_PADDING_CENTER_LEFT_SIZE 0;
		max: LIST_PADDING_CENTER_LEFT_SIZE -1;
				)
		)
		PART(SPACER, "elm.padding.center.right",
				DSC_R("default" 0.0,
						"elm.icon.2",
						min: LIST_PADDING_CENTER_RIGHT_SIZE 0;
		max: LIST_PADDING_CENTER_RIGHT_SIZE -1;
				)
		)
		PART(SWALLOW, "elm.icon.left",
				DSC_LTB("default" 0.0,
						"elm.padding.center.left", "elm.padding.top", "elm.padding.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.right",
				DSC_RTB("default" 0.0,
						"elm.padding.center.right", "elm.padding.top", "elm.padding.bottom",
				)
		)
		PART(TEXTBLOCK, "elm.text.main.left",
				DSC_LRTB("default" 0.0,
						"elm.icon.left", "elm.text.sub.right", "elm.padding.top", "elm.padding.bottom",
						min: 0 LIST_TEXT_MAIN_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_main";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_main_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_main_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.right",
				DSC_RTB("default" 0.0,
						"elm.icon.right", "elm.padding.top", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel1.offset: -LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 1.0 0.5;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.main.right",
				DSC_LRTB("default" 0.0,
						"elm.text.sub.left", "elm.icon.right", "elm.padding.top", "elm.padding.bottom",
						min: 0 LIST_TEXT_MAIN_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_main";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_main_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_main_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.left",
				DSC_LTB("default" 0.0,
						"elm.icon.left", "elm.padding.top", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel2.offset: LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 0.0 0.5;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)

		PART(RECT, "file_icon_clipper",
				DSC_L("default" 0.0,
						"elm.padding.left",
						fixed: 1 1;
		min: (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT);
		max: (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT);
				)
		)
		part
		{
			name:"elm.swallow.content";
			type:SWALLOW;
			clip_to: "file_icon_clipper";
			scale: 1;
			description
			{
				state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to:"file_icon_clipper";}
				rel2 { relative: 1.0 1.0; to:"file_icon_clipper";}
			}
		}
		part { name: "elm.icon.1";
		scale: 1;
		type: SWALLOW;
		clip_to: "file_icon_clipper";
		description
		{
			state: "default" 0.0;
			align: 0.5 0.5;
			fixed: 1 1;
			min: LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT;
			max: LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_WIDTH LITE_GENLIST_ICON_CUSTOM_THUMBNAIL_HEIGHT;
			rel1.to: "file_icon_clipper";
			rel2.to: "file_icon_clipper";
		}
		description { state: "fadeout" 0.0;
		inherit: "default" 0.0;
		color: 0 0 0 10;
		visible: 0;
		}
		description { state: "fadein" 0.0;
		inherit: "default" 0.0;
		}
		}
		part {
			name: "video_play";
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				visible: 1;
				min: 46 46;
				max: 46 46;
				align: 0.5 0.5;
				rel1 {relative: 0.0 0.0; to: "elm.icon.1";}
				rel2 {relative: 1.0 1.0; to: "elm.icon.1";}
			}
		}
	}
	LIST_PROGRAMS( target: "elm.text.main.left"; target: "elm.text.main.right";
	target: "elm.text.sub.left"; target: "elm.text.sub.right";
	)

	}

	group { GENLIST_NAME("myfile_1line_root/default")

	data.item: "treesize" GENLIST_TREESIZE_DEFAULT;
	data.item: "texts" "elm.text.main.left elm.text.main.right elm.text.sub.left elm.text.sub.right";
	data.item: "contents" "elm.icon.folder elm.icon.2 elm.icon.left elm.icon.right";
	data.item: "banded_bg_area" "elm.swallow.bg";
	data.item: "banded_bg_color" "255 255 255 255";

	parts {
		LIST_PART_BG
		PART(SWALLOW, "elm.swallow.pad",
				DSC_FROM_L("default" 0.0, );
		mouse_events: 0;
		)
		PART(SPACER, "elm.padding.top",
				DSC_FROM_T("default" 0.0,
						min: 0 LIST_PADDING_TOP_SIZE;
		max: -1 LIST_PADDING_TOP_SIZE;
				)
		)
		PART(SPACER, "elm.padding.bottom",
				DSC_FROM_B("default" 0.0,
						min: 0 LIST_PADDING_BOTTOM_SIZE;
		max: -1 LIST_PADDING_BOTTOM_SIZE;
				)
		)

		PART(SPACER, "elm.padding.left",
				DSC_FROM_L("default" 0.0,
						fixed: 1 0;
		min: LITE_GENLIST_ICON_PAD_L 0;
		max: LITE_GENLIST_ICON_PAD_L -1;
				)
		)
		PART(SPACER, "_bg",
				DSC_L("default" 0.0,
						"elm.padding.left",
						fixed: 1 1;
		min: (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH);
		max: (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH);
				)
		)
		PART(SWALLOW, "elm.icon.2",
				DSC_FROM_R("default" 0.0, )
		)
		PART(SPACER, "elm.padding.center.left",
				DSC_L("default" 0.0,
						"_bg",
						min: LIST_PADDING_CENTER_LEFT_SIZE 0;
		max: LIST_PADDING_CENTER_LEFT_SIZE -1;
				)
		)
		PART(SPACER, "elm.padding.center.right",
				DSC_R("default" 0.0,
						"elm.icon.2",
						min: LIST_PADDING_CENTER_RIGHT_SIZE 0;
		max: LIST_PADDING_CENTER_RIGHT_SIZE -1;
				)
		)
		PART(SWALLOW, "elm.icon.left",
				DSC_LTB("default" 0.0,
						"elm.padding.center.left", "elm.padding.top", "elm.padding.bottom",
				)
		)
		PART(SWALLOW, "elm.icon.right",
				DSC_RTB("default" 0.0,
						"elm.padding.center.right", "elm.padding.top", "elm.padding.bottom",
				)
		)
		PART(TEXTBLOCK, "elm.text.main.left",
				DSC_LRTB("default" 0.0,
						"elm.icon.left", "elm.text.sub.right", "elm.padding.top", "elm.padding.bottom",
						min: 0 LIST_TEXT_MAIN_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_main";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_main_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_main_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.right",
				DSC_RTB("default" 0.0,
						"elm.icon.right", "elm.padding.top", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel1.offset: -LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 1.0 0.5;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.main.right",
				DSC_LRTB("default" 0.0,
						"elm.text.sub.left", "elm.icon.right", "elm.padding.top", "elm.padding.bottom",
						min: 0 LIST_TEXT_MAIN_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_main";
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_main_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_main_dim";
		}
		)
		PART(TEXTBLOCK, "elm.text.sub.left",
				DSC_LTB("default" 0.0,
						"elm.icon.left", "elm.padding.top", "elm.padding.bottom",
						min: 0 LIST_TEXT_SUB_HEIGHT;
		text.min: 0 1;
		text.style: "list_text_sub_02";
		/* This limits text growing. */
		rel2.offset: LIST_TEXT_SUB_WIDTH_MAX 0;
		text.max: 1 0;
		align: 0.0 0.5;
		/*******************************/
				)
				description { state: "pressed" 0.0;
				inherit: "default" 0.0;
				text.style: "list_text_sub_02_press";
		}
		description { state: "disabled" 0.0;
		inherit: "default" 0.0;
		text.style: "list_text_sub_02_dim";
		}
		)

		PART(RECT, "file_icon_clipper",
				DSC_L("default" 0.0,
						"elm.padding.left",
						fixed: 1 1;
		min: (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH);
		max: (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH) (LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH);
				)
		)
		part
		{
			name:"elm.swallow.content";
			type:SWALLOW;
			clip_to: "file_icon_clipper";
			scale: 1;
			description
			{
				state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to:"file_icon_clipper";}
				rel2 { relative: 1.0 1.0; to:"file_icon_clipper";}
			}
		}
		part { name: "elm.icon.folder";
		scale: 1;
		type: SWALLOW;
		clip_to: "file_icon_clipper";
		description
		{
			state: "default" 0.0;
			align: 0.5 0.5;
			fixed: 1 1;
			min: LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH;
			max: LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH LITE_GENLIST_ICON_CUSTOM_ROOT_THUMBNAIL_WIDTH;
			rel1.to: "file_icon_clipper";
			rel2.to: "file_icon_clipper";
		}
		description { state: "fadeout" 0.0;
		inherit: "default" 0.0;
		color: 0 0 0 10;
		visible: 0;
		}
		description { state: "fadein" 0.0;
		inherit: "default" 0.0;
		}
		}
	}
	LIST_PROGRAMS( target: "elm.text.main.left"; target: "elm.text.main.right";
	target: "elm.text.sub.left"; target: "elm.text.sub.right";
	)
	}

}
